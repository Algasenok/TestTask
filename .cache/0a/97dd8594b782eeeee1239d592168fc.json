{"id":"boCh","dependencies":[{"name":"D:\\VigromTest3\\package.json","includedInParent":true,"mtime":1600513327530}],"generated":{"js":"module.exports={alex:{login:\"alex\",password:\"12345\"},article:{head:\"Описание приложения\",text:\"<p>Привет. Это статья, где я объясню чуть-чуть, как работает это приложение.</p>       <p>Все данные для статьи/авторизации/регистрации/комментариев хранятся в файлике <em>data.json</em>, который лежит в папке <em>src</em>. Там есть уже созданная одна учетная запись, статья и несколько комментариев.</p>       <p>ВАЖНО! При регистрации нового пользователя или добавлении комментария, он не добавляется в этот файл, т.к. я не могу редактировать локальные файлы((( При добавлении нового пользователя, данные будут храниться в хранилище <em>vuex</em> и сотрутся при перезапуске приложения (но во время этого запуска, можно создать неограниченное количество учетных записей и комментариев).</p>       <p>Сразу оговорюсь, что в погоне за простотой я использовал Parcel вместо Webpack и кажется из-за этого у меня не получилось разделять компоненты на три файла: .vue, .css, .js. Т.к. файлы подгружались неправильно, а стили разных компонентов перезаписывали друг друга. Поэтому скрипты писались в файле .vue, а для стилей использовался один файл (приложение маленькое, поэтому не критично - да и стилей я особо много и не написал).</p>       <p><strong>Регистрация</strong></p>       <p>Проверки данных нет (не было указано по заданию), поэтому при регистрации можно ввести любую абракадабру, которая может сломать код. Убедительная просьба так не делать. Так же из-за особенностей файла json нельзя создавать пользователей с именами: article и comments, т.к. эти имена зарезервированы для хранения текста статьи и комментариев. Если вы попробуете, создать пользователя с таким именем - ничего не произойдет, т.к. прежде чем записать нового юзера, происходит проверка, нет ли такого имени в данный момент. </p>       <p><strong>Авторизация</strong></p>       <p>Тоже самое. После нажатия на кнопку авторизации, в форме заполняете данные и осуществляется в ход в приложение.</p>       <p>Тестовая учетная запись:</p>       <ul>        \\t<li>Логин: alex</li>        \\t<li>Пароль: 12345</li>       </ul>       <p>(Регистр букв имеет значение).</p>       <p><strong>Комментарии</strong></p>       <p>Кнопка 'добавить комментарий' (или 'Комментировать') не видна, если  пользователь не авторизовался. После авторизации, появляется возможность комментирования.</p>\"},comments:[{login:\"Доброжелатель\",text:\"Будьте аккуратны, если решите брать на работу этого разработчика. Он любитель не очень умные шутки шутить!\",date:\"2020-09-20T15:02:46.621Z\"},{login:\"alex\",text:\"Воу. Шикарная статья. Но дизайн слабоват....\",date:\"2020-09-20T15:04:04.959Z\"},{login:\"Котопес\",text:\"Да ничего не слабоват. Котики рулят!!!!! \\nИли собаки?\\nИли котики?\",date:\"2020-09-20T15:04:52.721Z\"},{login:\"IvanIvanov\",text:\"Да ладно вам. Неплохо получилось))) Ставлю лайк.\\n\\nЭээээээммм. А где тут лайк поставить?\",date:\"2020-09-20T15:06:42.104Z\"},{login:\"SuperMaster\",text:\"Иди учи CSS, щегол!\",date:\"2020-09-20T15:09:24.452Z\"}]};"},"sourceMaps":{"js":{"mappings":[{"source":"data.json","name":"module","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"data.json","name":"exports","original":{"line":1,"column":7},"generated":{"line":1,"column":7}},{"source":"data.json","original":{"line":1,"column":15},"generated":{"line":1,"column":15}},{"source":"data.json","name":"alex","original":{"line":1,"column":16},"generated":{"line":1,"column":16}},{"source":"data.json","original":{"line":1,"column":21},"generated":{"line":1,"column":21}},{"source":"data.json","name":"login","original":{"line":1,"column":22},"generated":{"line":1,"column":22}},{"source":"data.json","original":{"line":1,"column":28},"generated":{"line":1,"column":28}},{"source":"data.json","name":"password","original":{"line":1,"column":35},"generated":{"line":1,"column":35}},{"source":"data.json","original":{"line":1,"column":44},"generated":{"line":1,"column":44}},{"source":"data.json","name":"article","original":{"line":1,"column":53},"generated":{"line":1,"column":53}},{"source":"data.json","original":{"line":1,"column":61},"generated":{"line":1,"column":61}},{"source":"data.json","name":"head","original":{"line":1,"column":62},"generated":{"line":1,"column":62}},{"source":"data.json","original":{"line":1,"column":67},"generated":{"line":1,"column":67}},{"source":"data.json","name":"text","original":{"line":1,"column":89},"generated":{"line":1,"column":89}},{"source":"data.json","original":{"line":1,"column":94},"generated":{"line":1,"column":94}},{"source":"data.json","name":"comments","original":{"line":1,"column":2352},"generated":{"line":1,"column":2352}},{"source":"data.json","original":{"line":1,"column":2361},"generated":{"line":1,"column":2361}},{"source":"data.json","original":{"line":1,"column":2362},"generated":{"line":1,"column":2362}},{"source":"data.json","name":"login","original":{"line":1,"column":2363},"generated":{"line":1,"column":2363}},{"source":"data.json","original":{"line":1,"column":2369},"generated":{"line":1,"column":2369}},{"source":"data.json","name":"text","original":{"line":1,"column":2385},"generated":{"line":1,"column":2385}},{"source":"data.json","original":{"line":1,"column":2390},"generated":{"line":1,"column":2390}},{"source":"data.json","name":"date","original":{"line":1,"column":2499},"generated":{"line":1,"column":2499}},{"source":"data.json","original":{"line":1,"column":2504},"generated":{"line":1,"column":2504}},{"source":"data.json","original":{"line":1,"column":2532},"generated":{"line":1,"column":2532}},{"source":"data.json","name":"login","original":{"line":1,"column":2533},"generated":{"line":1,"column":2533}},{"source":"data.json","original":{"line":1,"column":2539},"generated":{"line":1,"column":2539}},{"source":"data.json","name":"text","original":{"line":1,"column":2546},"generated":{"line":1,"column":2546}},{"source":"data.json","original":{"line":1,"column":2551},"generated":{"line":1,"column":2551}},{"source":"data.json","name":"date","original":{"line":1,"column":2598},"generated":{"line":1,"column":2598}},{"source":"data.json","original":{"line":1,"column":2603},"generated":{"line":1,"column":2603}},{"source":"data.json","original":{"line":1,"column":2631},"generated":{"line":1,"column":2631}},{"source":"data.json","name":"login","original":{"line":1,"column":2632},"generated":{"line":1,"column":2632}},{"source":"data.json","original":{"line":1,"column":2638},"generated":{"line":1,"column":2638}},{"source":"data.json","name":"text","original":{"line":1,"column":2648},"generated":{"line":1,"column":2648}},{"source":"data.json","original":{"line":1,"column":2653},"generated":{"line":1,"column":2653}},{"source":"data.json","name":"date","original":{"line":1,"column":2723},"generated":{"line":1,"column":2723}},{"source":"data.json","original":{"line":1,"column":2728},"generated":{"line":1,"column":2728}},{"source":"data.json","original":{"line":1,"column":2756},"generated":{"line":1,"column":2756}},{"source":"data.json","name":"login","original":{"line":1,"column":2757},"generated":{"line":1,"column":2757}},{"source":"data.json","original":{"line":1,"column":2763},"generated":{"line":1,"column":2763}},{"source":"data.json","name":"text","original":{"line":1,"column":2776},"generated":{"line":1,"column":2776}},{"source":"data.json","original":{"line":1,"column":2781},"generated":{"line":1,"column":2781}},{"source":"data.json","name":"date","original":{"line":1,"column":2873},"generated":{"line":1,"column":2873}},{"source":"data.json","original":{"line":1,"column":2878},"generated":{"line":1,"column":2878}},{"source":"data.json","original":{"line":1,"column":2906},"generated":{"line":1,"column":2906}},{"source":"data.json","name":"login","original":{"line":1,"column":2907},"generated":{"line":1,"column":2907}},{"source":"data.json","original":{"line":1,"column":2913},"generated":{"line":1,"column":2913}},{"source":"data.json","name":"text","original":{"line":1,"column":2927},"generated":{"line":1,"column":2927}},{"source":"data.json","original":{"line":1,"column":2932},"generated":{"line":1,"column":2932}},{"source":"data.json","name":"date","original":{"line":1,"column":2954},"generated":{"line":1,"column":2954}},{"source":"data.json","original":{"line":1,"column":2959},"generated":{"line":1,"column":2959}}],"sources":{"data.json":"module.exports={alex:{login:\"alex\",password:\"12345\"},article:{head:\"Описание приложения\",text:\"<p>Привет. Это статья, где я объясню чуть-чуть, как работает это приложение.</p>       <p>Все данные для статьи/авторизации/регистрации/комментариев хранятся в файлике <em>data.json</em>, который лежит в папке <em>src</em>. Там есть уже созданная одна учетная запись, статья и несколько комментариев.</p>       <p>ВАЖНО! При регистрации нового пользователя или добавлении комментария, он не добавляется в этот файл, т.к. я не могу редактировать локальные файлы((( При добавлении нового пользователя, данные будут храниться в хранилище <em>vuex</em> и сотрутся при перезапуске приложения (но во время этого запуска, можно создать неограниченное количество учетных записей и комментариев).</p>       <p>Сразу оговорюсь, что в погоне за простотой я использовал Parcel вместо Webpack и кажется из-за этого у меня не получилось разделять компоненты на три файла: .vue, .css, .js. Т.к. файлы подгружались неправильно, а стили разных компонентов перезаписывали друг друга. Поэтому скрипты писались в файле .vue, а для стилей использовался один файл (приложение маленькое, поэтому не критично - да и стилей я особо много и не написал).</p>       <p><strong>Регистрация</strong></p>       <p>Проверки данных нет (не было указано по заданию), поэтому при регистрации можно ввести любую абракадабру, которая может сломать код. Убедительная просьба так не делать. Так же из-за особенностей файла json нельзя создавать пользователей с именами: article и comments, т.к. эти имена зарезервированы для хранения текста статьи и комментариев. Если вы попробуете, создать пользователя с таким именем - ничего не произойдет, т.к. прежде чем записать нового юзера, происходит проверка, нет ли такого имени в данный момент. </p>       <p><strong>Авторизация</strong></p>       <p>Тоже самое. После нажатия на кнопку авторизации, в форме заполняете данные и осуществляется в ход в приложение.</p>       <p>Тестовая учетная запись:</p>       <ul>        \\t<li>Логин: alex</li>        \\t<li>Пароль: 12345</li>       </ul>       <p>(Регистр букв имеет значение).</p>       <p><strong>Комментарии</strong></p>       <p>Кнопка 'добавить комментарий' (или 'Комментировать') не видна, если  пользователь не авторизовался. После авторизации, появляется возможность комментирования.</p>\"},comments:[{login:\"Доброжелатель\",text:\"Будьте аккуратны, если решите брать на работу этого разработчика. Он любитель не очень умные шутки шутить!\",date:\"2020-09-20T15:02:46.621Z\"},{login:\"alex\",text:\"Воу. Шикарная статья. Но дизайн слабоват....\",date:\"2020-09-20T15:04:04.959Z\"},{login:\"Котопес\",text:\"Да ничего не слабоват. Котики рулят!!!!! \\nИли собаки?\\nИли котики?\",date:\"2020-09-20T15:04:52.721Z\"},{login:\"IvanIvanov\",text:\"Да ладно вам. Неплохо получилось))) Ставлю лайк.\\n\\nЭээээээммм. А где тут лайк поставить?\",date:\"2020-09-20T15:06:42.104Z\"},{login:\"SuperMaster\",text:\"Иди учи CSS, щегол!\",date:\"2020-09-20T15:09:24.452Z\"}]};"},"lineCount":null}},"error":null,"hash":"b405e17eb12f37ecbcd8bb9f83eae106","cacheData":{"env":{}}}